---
- hosts: localhost

  vars:

  # https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_privilege_escalation.html#using-become
  # When 'become' is yes and 'become_user' not mentioned, becomes root user by default. Setting anyways for explicitness.
  #
  # NOTE: May 27/2025
  # AWS Inspector noted several Critical / High CVEs with available docker package but patched versions
  # were not available. As a result, new steps have been added to pull assets from docker repo directly.
  # See: https://docs.docker.com/engine/install/fedora/ for the steps that were followed.
  become: yes
  become_user: root
  become_method: sudo

  tasks:

  - name: Install wget & nano & et al.
    ansible.builtin.yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
        - wget
        - nano
        - git
        - yum-utils
        - device-mapper-persistent-data 
        - lvm2

  # https://repost.aws/questions/QU1jeKaTRYQ7WeA7XobfP21g/how-do-i-install-docker-version-27-3-1-on-amazon-linux-2023
  # We only want to remove docker on the very first deployment. Keep stateful marker for conditional actions (lower)
  - name: Check if docker removal marker exists
    ansible.builtin.stat:
      path: /home/ec2-user/.ansible_docker_removal_done
    register: docker_removal_marker

  - name: Remove docker
    ansible.builtin.dnf:
      name: 
        - docker 
        - docker-client 
        - docker-client-latest 
        - docker-common 
        - docker-latest 
        - docker-latest-logrotate 
        - docker-logrotat
        - docker-selinux
        - docker-engine-selinux
        - docker-engine
      state: absent
    when: not docker_removal_marker.stat.exists

  - name: Create marker file after docker removal
    ansible.builtin.file:
      path: /home/ec2-user/.ansible_docker_removal_done
      state: touch
    when: not docker_removal_marker.stat.exists

  # - name: Install docker.
  # # https://docs.docker.com/engine/install/ubuntu/
  #   ansible.builtin.dnf:
  #     name: docker-25.0.6
  #     state: present

  # As of May 27, 2025 available Fedora versions were 41 and 42. Future-proofiing with 42.
  - name: Add Docker Repo
    become: true
    become_user: ec2-user
    ansible.builtin.shell: |
      sudo dnf -y install dnf-plugins-core
      sudo dnf-3 config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
      sudo sed -i 's/$releasever/42/g' /etc/yum.repos.d/docker-ce.repo
    when: not docker_removal_marker.stat.exists

  - name: Install Docker components
    ansible.builtin.dnf:
      name: 
        - docker-ce-28.1.1
        - docker-ce-cli-28.1.1
        - containerd.io 
        - docker-buildx-plugin 
        - docker-compose-plugin
      state: present
    when: not docker_removal_marker.stat.exists

  # After installing docker directly from source, got errors like:
  # docker: Error response from daemon: failed to create task for container: failed to create shim task: OCI runtime create failed: unable to retrieve OCI runtime error (open /run/containerd/io.containerd.runtime.v2.task/moby/54d38675c8125612fc18580fc686460c184453050d4849099298714ddc26da43/log.json: no such file or directory): runc did not terminate successfully: exit status 1: unknown
  # Fixed by installing new runc release.
  - name: Add Runc Repo
    become: true
    become_user: ec2-user
    ansible.builtin.shell: |
      curl -Lo runc https://github.com/opencontainers/runc/releases/download/v1.3.0/runc.amd64
      chmod +x runc
      sudo mv runc /usr/bin/runc
    when: not docker_removal_marker.stat.exists

  - name: Ensure docker is running
  # https://stackoverflow.com/questions/42040688/docker-daemon-start-using-ansible
    service:
      name: docker
      state: started

  - name: Enable docker.service
    # https://stackoverflow.com/questions/42040688/docker-daemon-start-using-ansible
    ansible.builtin.systemd:
      name: docker.service
      daemon_reload: true
      enabled: true

  - name: Sudoless Docker - Create Group
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/group_module.html 
    ansible.builtin.group:
      name: docker
      state: present

  - name: Sudoless Docker - Add ec2-user to docker
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/user_module.html
    ansible.builtin.user:
      name: ec2-user
      groups: docker
      append: yes


  # - name: MySQL - Get RPM
  #   # https://serverfault.com/questions/946219/how-to-install-mysql-server-using-ansible-playbook
  #   ansible.builtin.shell: |
  #     mkdir -p /opt/mysql && cd /opt/mysql
  #     rm -rf /opt/mysql/mysql*.rpm*

  #     # Stopped working ~Jan 15/24. Commented out but keeping for reference.
  #     # wget https://dev.mysql.com/get/mysql80-community-release-el9-1.noarch.rpm
  #     # rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022

  #     # Sudo suddenly required to make this work. Very strange. key must be imported first (Jan 16/24)
  #     rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2023
  #     wget https://dev.mysql.com/get/mysql80-community-release-el9-5.noarch.rpm
  #     yum install -y mysql80-community-release-el9-5.noarch.rpm

  # #This stopped working when the RPM / GPG problem (above) happened. Commented out but kept for reference.
  # #Consider replacing this whole thing with a MySQL docker container instead to avoid future headaches.
  # - name: MySQL - Install RPM
  #   ansible.builtin.yum:
  #     # name: /opt/mysql/mysql80-community-release-el9-1.noarch.rpm
  #     name: /opt/mysql/mysql80-community-release-el9-5.noarch.rpm
  #     state: present

  # - name: MySQL - Install Client
  #   ansible.builtin.yum:
  #     name: mysql-community-client
  #     state: installed


  - name: Install Java Corretto 17
    # tw relies on Java Corretto
    ansible.builtin.yum:
      name: java-17-amazon-corretto-devel-1:17.0.14+7-1.amzn2023.1
      state: present


  - name: Install pyyaml (needed by seqerakit)
    # https://pypi.org/project/PyYAML/
    ansible.builtin.pip:
      name: PyYAML==6.0.1


  - name: Install Seqerakit
    # https://github.com/seqeralabs/seqera-kit
    # Dev branch here for times when dev branch might contain fixes not yet present in master.
    become: true
    become_user: ec2-user
    ansible.builtin.pip:
      name: seqerakit==0.4.8
      # name: git+https://github.com/seqeralabs/seqera-kit.git@dev
      extra_args: --user

  - name: Create .docker folder
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
    # https://docs.docker.com/compose/install/linux/#install-the-plugin-manually
    ansible.builtin.file:
      path: /home/ec2-user/.docker/cli-plugins
      state: directory
      mode: '0755'

  - name: Recursively change ownership of the .docker directory
  # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
    ansible.builtin.file:
      path: /home/ec2-user/.docker
      state: directory
      recurse: yes
      owner: ec2-user
      group: ec2-user

  # - name: Install Docker-Compose (v2)
  #   # https://www.techcrumble.net/2019/12/how-install-docker-and-docker-compose-using-ansible-playbooks/
  #   # https://github.com/docker/compose/releases/
  #   # Pinning to specific version rather than latest.
  #   get_url:
  #     url: https://github.com/docker/compose/releases/download/v2.24.2/docker-compose-linux-x86_64
  #     dest: /home/ec2-user/.docker/cli-plugins/docker-compose
  #     mode: 'u+x,g+x,o+x'


  - name: Install twcli
    # Source: https://github.com/seqeralabs/tower-cli
    become: true
    become_user: ec2-user
    ansible.builtin.shell: |
      cd /home/ec2-user
      wget https://github.com/seqeralabs/tower-cli/releases/download/v0.9.3/tw-linux-x86_64

      mv tw-* tw
      chmod +x ./tw
      sudo mv tw /usr/local/bin
      tw --version


  - name: Stop ECS Agent
    # Unneeded for the Tower host and causes churn in `docker ps -a` command
    ansible.builtin.shell: |
      systemctl stop ecs  || true
      docker rm ecs-agent || true
